
#include "Informes.h"

/*
 * 6) Imprimir Clientes: Se imprimirá una lista de clientes con todos sus datos junto con la cantidad de
 *  “pedidos de recolección” que posee en estado “Pendiente”.
 *
 */

int ContadorDePedidosPendientesPorCliente(eClientes clientes[], int tam_clientes, ePedidos pedidos[], int tam_pedidos)
{
	int retorno = -1;
	int i;
	eAuxiliarContador pedidosPendientes[tam_clientes];
	if(pedidos != NULL && clientes != NULL && tam_pedidos > 0 && tam_clientes > 0)
	{
		InicializarAuxiliarContadorDePedidosPorCliente(clientes, tam_clientes, pedidosPendientes);

		for(i=0; i<tam_pedidos; i++)
		{
			if(pedidos[i].isEmpty == OCUPADO  && pedidos[i].estado == PENDIENTE && pedidosPendientes[i].id == pedidos[i].idCliente)
			{
				pedidosPendientes[i].contador++; //conte los pedidos que tiene cada cliente en estado pendiente
				retorno = 0;
			}
		}
	}

	return retorno;
}

int InicializarAuxiliarContadorDePedidosPorCliente(eClientes clientes[], int tam_clientes, eAuxiliarContador pedidosPendientes[])
{
	int retorno = -1;
	int i;
	if(clientes != NULL && pedidosPendientes != NULL && tam_clientes > 0)
	{
		for(i=0; i<tam_clientes; i++)
		{
			pedidosPendientes[i].id = clientes[i].idCliente; //se inicializa con el id de los clientes
			pedidosPendientes[i].contador = 0;
			retorno = 0;
		}
	}
	return retorno;
}

int MostrarListaDeClientesConSusPedidos(eClientes clientes[], int tam_clientes, ePedidos pedidos[], int tam_pedidos)
{
	int retorno=-1;
	int i;
	int j;
	if(clientes != NULL && tam_clientes > 0 && pedidos != NULL && tam_pedidos > 0)
	{
		for(i=0; i<tam_clientes; i++)
		{
			if(clientes[i].isEmpty == OCUPADO)
			{
				ContadorDePedidosPendientesPorCliente(clientes[i], pedidos, tam_pedidos,tam_clientes);
				MostrarClienteConSuPedido(clientes[i], pedidos, tam_pedidos);
			}
		}
	}

	return retorno;
}



int MostrarClienteConSusPedidosPendientes(eClientes cliente, ePedidos pedidos[], int tam_pedidos)
{
	int retorno = -1;
	int i;
	if(pedidos != NULL && tam_pedidos > 0)
	{
		for(i=0; i<tam_pedidos; i++)
		{
			if(pedidos[i].isEmpty == OCUPADO && pedidos[i].idCliente == cliente.idCliente)
			{
				printf("\n%5d %20s %20s %20s %5d %20s Pedido numero: %10d", cliente.idCliente, cliente.nombreEmpresa, cliente.cuit,
						cliente.direccion.calle, cliente.direccion.numero, cliente.localidad, pedidos[i].idPedido);
			}
		}
	}
	return retorno;
}











