
#include "Clientes.h"

int InicilizarClientes(eClientes clientes[], int cantidad)
{
	int retorno=-1;
	if(clientes != NULL && cantidad > 0)
	{
		for(int i=0; i<cantidad; i++)
		{
			clientes[i].isEmpty = LIBRE;
			retorno=1;
		}
	}
	return retorno;
}

int BuscarLibre(eClientes clientes[], int cantidad)
{
	int index;
	int i;
	index = -1;
	if(clientes != NULL && cantidad > 0)
	{
		for(i=0; i< cantidad; i++)
		{
			if(clientes[i].isEmpty == LIBRE)
			{
				index=i;
				break;
			}
		}
	}
	return index;
}

eClientes InformacionDeUnCliente()
{
	eClientes unCliente;
	ObtenerNumerosLetras(unCliente.nombreEmpresa, "\nIngre el nombre de la empresa: ",
			"Error. Ingrese nuevamente (letras y numeros): ",1);
	ObtenerCuitCuil(unCliente.cuit, "\nIngrese el CUIT de la empresa (xx-xxxxxxxx-x)",
			"\nError. Ingrese el cuit nuevamente: ", 1);
	ObtenerNumerosLetras(unCliente.direccion, "\nIngrese la direccion de la empresa: ",
			"\nError. Ingrese la direccion nuevamente: ", 1);
	ObtenerNumerosLetras(unCliente.localidad, "\nIngrese la localidad: ",
			"\nError. Ingrese la localidad nuevamente: ", 1);
	unCliente.isEmpty = OCUPADO;
	unCliente.idCliente = 1;

	return unCliente;
}

int AltaDeCliente(eClientes clientes[], int cantidad, int* idClientes)
{
	int retorno=-1;
	int index;
	if(clientes != NULL && cantidad > 0)
	{
		index=BuscarLibre(clientes, cantidad);
		if(index != -1)
		{
			clientes[index]=InformacionDeUnCliente();
			*idClientes= *idClientes+1;
			clientes[index].idCliente=*idClientes;
			retorno=0;
		}
	}
	return retorno;
}

void MostrarInfoUnCliente(eClientes cliente)
{
	printf("%d %s %s %s %s", cliente.idCliente, cliente.nombreEmpresa, cliente.direccion, cliente.direccion, cliente.localidad);
}

int MostrarListaClientes(eClientes clientes[], int cantidad)
{
	int retorno =-1;
	int i;
	if(clientes != NULL && cantidad > 0)
	{
		for(i=0; i<cantidad; i++)
		{
			if(clientes[i].isEmpty == OCUPADO)
			{
				MostrarInfoUnCliente(clientes[i]);
			}
		}
	}
	return retorno;
}

int ModificacionDatosDeUnCliente(eClientes clientes[], int cantidad)
{
	int retorno =-1;
	int i;
	char confirmar;
	int auxiliarId;
	int modificar;

	ObtenerCaracterDosOpciones(&confirmar,"\nEsta seguro que desea modificar la informacion de un cliente? s/n: ",
			"Error. Ingrese s - n",'s', 'n', 1);
	if(confirmar == 's')
	{
		MostrarListaProductos(listaProductos, tam);
		auxiliarId=PedirEntero("\nIngrese el id del producto que desea modificar: ");
		for(i=0; i<tam; i++)
		{
			if(auxiliarId == listaProductos[i].idProducto)
			{
				modificar=PedirEntero("\nIngrese 1 si quiere modificar el precio"
									  "\nIngrese 2 si quiere modificar el tipo"
									  "\n Opcion: ");
				switch(modificar)
				{
				case 1:
					listaProductos[i].precio = PedirDecimal("\nIngrese el nuevo precio del producto: ");
					printf("\nEl precio del producto fue modificado.");
					break;

				case 2:
					listaProductos[i].tipo = PedirEntero("\nIngrese el nuevo tipo de producto: ");
					printf("\nEl tipo del producto fue modificado.");
					break;
				default:
					printf("\nNo eligio una opcion correcta");
				}
				retorno=1;
				break;
			}
		}
	}

	return retorno;
}





