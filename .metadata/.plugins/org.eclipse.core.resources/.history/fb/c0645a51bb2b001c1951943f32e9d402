
#include "Pedidos.h"

int InicializarListaDePedidos(ePedidos pedidos[], int cantidad)
{
	int retorno=-1;
	if(pedidos != NULL && cantidad > 0)
	{
		for(int i=0; i<cantidad; i++)
		{
			pedidos[i].isEmpty = LIBRE;
			retorno=1;
		}
	}
	return retorno;
}

int BuscarLugarLibrePedidos(ePedidos pedidos[], int cantidad)
{
	int index;
	int i;
	index = -1;
	if(pedidos != NULL && cantidad > 0)
	{
		for(i=0; i< cantidad; i++)
		{
			if(pedidos[i].isEmpty == LIBRE)
			{
				index=i;
				break;
			}
		}
	}
	return index;
}

int BuscarPedidosPorId(ePedidos pedidos[], int cantidad, int id)
{
	int index = -1;
	int i;
	if(pedidos != NULL && cantidad>0)
	{
		for(i=0; i< cantidad; i++)
		{
			if(pedidos[i].isEmpty == OCUPADO && pedidos[i].idPedido == id)
			{
				index=i;
				break;
			}
		}
	}
	return index;
}

int AltaPedidoDeRecoleccion(eClientes clientes[], int tam_clientes, ePedidos pedidos[], int tam_pedidos, int* idPedidos)
{
	int retorno=-1;
	int auxIdCliente;
	int idClienteEncontrado;
	int indexPedidoLugarLibre;
	if(clientes != NULL && pedidos != NULL && tam_clientes > 0 && tam_pedidos > 0)
	{
		MostrarListaClientes(clientes, tam_clientes);
		printf("\n");
		ObtenerEntero(&auxIdCliente, "\nIngrese el Id de un cliente: ", "\nError. Ingrese un numero para el id: ", 1, tam_clientes,1);
		idClienteEncontrado= BuscarClientePorId(clientes, tam_clientes, auxIdCliente);
		indexPedidoLugarLibre = BuscarLugarLibrePedidos(pedidos, tam_pedidos);
		if(idClienteEncontrado != -1)
		{
			if(indexPedidoLugarLibre != -1)
			{
				ObtenerDecimal(&pedidos[indexPedidoLugarLibre].cantidadKilos, "\nIngrese la cantidad de kilos de residuos: ",
						"\nError. Ingrese un numero valido: ", 1, 99999,1);
				pedidos[indexPedidoLugarLibre].idCliente = idClienteEncontrado;
				pedidos[indexPedidoLugarLibre].estado = PENDIENTE; //estructura?
				*idPedidos = *idPedidos+1;
				pedidos[indexPedidoLugarLibre].idPedido = *idPedidos;
				pedidos[indexPedidoLugarLibre].isEmpty = OCUPADO;
				printf("\nEl pedido fue realizado con exito.\n");
				retorno=1;
			}
			else
			{
				printf("\nNo hay lugar disponible para tomar otro pedido\n");
			}
		}
		else
		{
			printf("\nNo hay un cliente con el id ingresado.\n");
		}

	}
	return retorno;
}
